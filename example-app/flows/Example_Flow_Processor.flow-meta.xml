<?xml version="1.0" encoding="UTF-8" ?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>HandleFailures</name>
        <label>Handle Failures</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <actionName>InvocableFailAsyncAction</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>action</name>
            <value>
                <elementReference>asyncAction</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>developerName</name>
            <value>
                <elementReference>settings.DeveloperName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>errorMessage</name>
            <value>
                <elementReference>errorMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>InvocableFailAsyncAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <assignments>
        <name>Error_Fault_Message</name>
        <label>Error = Fault Message</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>HandleFailures</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Error_Invalid_Opportunity_Id</name>
        <label>Error = Invalid Opportunity Id</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>invalidOppIdMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HandleFailures</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Each flow should result in one of two outcomes:
1. If the action succeeded, update the Async Action&apos;s Status to &quot;Completed&quot;
2. If the action failed, use the included invocable to run failure logic for the current Async Action</description>
        <name>Set_Status_Completed</name>
        <label>Set Status = &quot;Completed&quot;</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>asyncAction.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Found_Opportunity</name>
        <label>Found Opportunity?</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Error_Invalid_Opportunity_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>opportunity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Stage_Closed_Won</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>This sample flow demonstrates how to define processor logic in a flow.
This implementation expects the Async Action&apos;s RelatedRecordId to point to an Opportunity Id.
That Opportunity will be marked as &quot;Closed Won&quot;.
Any errors along the way are handled by the &quot;Handle Async Action Failures&quot; invocable action.</description>
    <environments>Default</environments>
    <interviewLabel>Template: Async Action Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Example Flow Processor</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>opportunity</name>
        <label>Get Opportunity</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Opportunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>asyncAction.RelatedRecordId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_Stage_Closed_Won</name>
        <label>Set Stage = &quot;Closed Won&quot;</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>Set_Status_Completed</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Fault_Message</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>opportunity.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>StageName</field>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <sourceTemplate>Template_Async_Action_Flow</sourceTemplate>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>opportunity</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>invalidOppIdMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Invalid Opportunity Id: {!asyncAction.RelatedRecordId__c}</text>
    </textTemplates>
    <variables>
        <name>asyncAction</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>AsyncAction__c</objectType>
    </variables>
    <variables>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>settings</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>AsyncActionProcessor__mdt</objectType>
    </variables>
</Flow>
